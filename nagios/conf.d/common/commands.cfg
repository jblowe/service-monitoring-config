# Common Nagios configuration
#
# commands.cfg

########################################################################
# Command definitions
########################################################################

########################################################################
# Commands that use the NRPE system on the client host(s), to monitor
# the status of resources or other conditions on that host by running
# plugin code on the host itself.
#
# The following commands require that:
# * Nagios, NRPE (Nagios Remote Plugin Executor), the Nagios plugins
#   package, and appropriate individual Nagios plugins (e.g. check_disk)
#   are installed on the client host.
# * NRPE has been configured, as needed, in $NAGIOS_HOME/nrpe.cfg
# * The NRPE daemon is actively running on the client host, having been
#   launched via xinetd (preferred) or inetd (both with TCP Wrapper
#   support either built-in, as it often is in xinetd, or configured
#   for this service), or directly via chkconfig (deprecated).
# * The client host has been configured to grant access to one or more
#   monitoring server(s) running Nagios. This is typically done in
#   both the client's xinetd config (or, for inetd, in a TCP Wrapper
#   access control rule), and in its host firewall rules.
########################################################################

# -------------------
# Run Plugin via NRPE 
# -------------------

# Runs a plugin on the client host, specified by a service object's
# check_command of 'check_nrpe!some_plugin_name_here', where
# 'some_plugin_name_here' is sent to the check_nrpe plugin as $ARG1$, below.
#
# This mechanism is typically used to check resources - free disk space,
# load average, et al. - on the client host. However, there are a large
# number of plugins that, if installed, can be executed on the client via NRPE.
#
# The configuration of that plugin commmand, such as under what circumstances
# it should generate a warning or critical status, etc., is declared and
# stored on each client host, in $NAGIOS_HOME/nrpe.cfg
# Thus, this configuration can vary between hosts.
#
# By default, it is the client host that controls its own configuration for
# each plugin, which is regarded as more secure. If you wish to override
# that default and enable the monitoring server to send that configuration
# instead, in $ARG2$...$ARGn$ arguments, configure 'dont_blame_nrpe=0' in
# $NAGIOS_HOME/nrpe.cfg on the client host. This is not recommended,
# however, as doing so introduces potential command injection vulnerabilities;
# for instance: http://seclists.org/fulldisclosure/2014/Apr/242

define command {
  command_name  run-plugin-via-nrpe
  command_line  /usr/lib/nagios/plugins/check_nrpe -H $HOSTADDRESS$ -c $ARG1$
  
  # Do not register this object; instead, use it only as a template
  # (This needs to be declared here anew, even if present in an inherited template.)
  register                       0  
}
  
########################################################################
# Commands that communicate with services on the client host(s)
########################################################################

# For details regarding the options in the "check_ping" plugin,
# used in one or more commands below, see
# http://nagios-plugins.org/doc/man/check_ping.html

# ---------------------------
# Check Host Response to Ping 
# ---------------------------

# Ping a remote host.
# Return a warning or error if the time required for a response,
# or the percentage of packets dropped, exceeds specified threshholds
#
# Value pairs used with --warning and --critical, below:
# "<rta>,<pl>% where <rta> is the round trip average travel
# time (ms) which triggers a WARNING or CRITICAL state, and <pl>
# is the percentage of packet loss to trigger an alarm state."

define command {
  command_name  ping-host
  command_line  /usr/lib/nagios/plugins/check_ping --hostname=$HOSTADDRESS$ --use-ipv4 --warning=2000.0,20% --critical=5000.0,60% --timeout=8
}

########################################################################
# Commands that communicate with services on the client host(s)
########################################################################

# ----------------------------
# Send Notifications Via Email
# ----------------------------

# Generates the body of a notification message and sends it via email.
# Inserts data into both the body and Subject: line from values in Nagios macros.

define command {
  command_name  notify-by-email
  command_line  /usr/bin/printf "%b" "Type: $NOTIFICATIONTYPE$\nHost: $HOSTALIAS$\nService: $SERVICEDESC$\nState: $SERVICESTATE$\nAdditional Info:\n$SERVICEOUTPUT$\nTime: $LONGDATETIME$\n" | /bin/mail -s "$SERVICEDESC$ on $HOSTALIAS$ - Nagios monitoring alert" $CONTACTEMAIL$
}

